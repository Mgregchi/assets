//const dat = new Date();

document.addEventListener('loadeddata', function(e) {
    

})

let purpose = true

$(document).ready(function() {

    $("#offline").ready(
        function readyOffline(e) {
            console.log("Offline app ready!")
            Offline.options = {
                // Should we automatically retest periodically when the connection is down (set to false to disable).
                reconnect: {
                    // How many seconds should we wait before rechecking.
                    initialDelay: 3,

                    // How long should we wait between retries.
                    //delay: (1.5 * last delay, capped at 1 hour)
                },

                // Should we store and attempt to remake requests which fail while the connection is down.
                requests: true,

                // Should we show a snake game while the connection is down to keep the user entertained?
                // It's not included in the normal build, you should bring in js/snake.js in addition to
                // offline.min.js.
                game: true           
            }       
        }
    )



    /*
    let anchors = $("a").click(function(e){
        e.preventDefault()
        if(this.href.length>3){
            console.log(this.href)
            window.location = this.href
        }
        console.log("ANCHOR CLICKED")
    }) //.attr("href")
    for(let a = 0;a<anchors.length;a++) {
        console.log(anchors[a].href)
    }
    console.log(anchors.length)

    */
    $("[data-name='navbar-tog']").click(function() {
        $("[data-name='navbar']").toggleClass('sticky-top')

    })
    let b_number=$('.btn-number')
    let i_number =$(".input-number")    
    let input_number = i_number
    let btn_number = b_number
    /*cr(
        btn_number = b_number,
        input_number =i_number,
        reset=false
    )*/
    $($(".offcanvas")[0]).on("hidden.bs.offcanvas",
        function(){
            /*cr(
                btn_number = b_number,
                input_number =i_number,
                reset=false
            ) */           
        })

    //$(ff[0]).on("hidden.bs.offcanvas", function(){console.log("JQUERY OFFSCANVAS")})

    var ready = false
    let cart_view, cart_table, t_items,checkout_btn,empty_cart_search,kep
    cart_view = $("[data-name='cart-view']")
    cart_view.click(function(e){
        cart_table = $("#cart-table")
        cart_table.load("/cart/ .cart",function(e){
                checkout_btn = $("#checkout-btn")//document.getElementById("checkout-btn")
            //console.log()
                t_items = $('[data-name="cart-total-items"]')[2].innerText
                if(t_items>0){
                    checkout_btn.show()
                } else {
                    checkout_btn.hide()
                }
            ready = true

            //callMe()
            /*
            empty_cart_search = $("empty-basket-search")
            console.log("THIS",$(this).find("#empty-basket-search"))
            var ems = empty_cart_search.prevObject[0].getElementById("empty-basket-search")
            ems.addEventListener("keypress", function(e) {console.log("VANILA", e.keyCode)})
            */
           $(this).find("#empty-basket-search") 
           .keypress(function(e){

            })
            //change, focusin, keydown
            // IF DOES NOT WORK, BREAK EACH EVENTS TO A CALLABLE FUNCTION LIKE BELOW
            /* $(".btn_number").click(function_that_does_btn_stuff)
            */
            
            
            //i_number.off("change","focusin","keydown", input_number)
            //b_number.off("click",b_number)
            /*
            input_number = inpt.add($(this).find(".input-number"))
            btn_number = btnumber.add($(this).find(".btn-number"))
            */

            //btn_number = $(this).find(".btn-number")
            //input_number = $(this).find(".input-number")
            //input_number.off("click","**")//unbind()
            //btn_number.off("click","**")//unbind()
            
            //console.log("BTN NUMBER UNBIND",btn_number)
            //console.log("INPUT NUMBER UNBIND", input_number)
            
            //btn_number = $(document).find(".btn-number")
            //input_number = $(document).find(".input-number")
            
            //console.log("BTN NUMBER JQUERY",btn_number)
            //console.log("INPUT NUMBER JQUERY", input_number)
            //console.log("BTN NUMBER DOCUMENT", cbtn_number)
            //console.log("INPUT NUMBER DOCUMENT", cinput_number)
           /* cr(
                btn_number=btn_number,//$('.btn-number'),
                input_number =input_number,//$(".input-number"),
                reset=true
            )*/




        })

    })
    //$("#cart-table").load("/cart/",".cart")

    function cElement(elemName, options) {
        //if(elemName.length >1)
        var content, name
        if (options) {
            content = options.content
            name = options.name

            el = document.createElement(elemName)//, options)
            el.name = name;
            el.content = content
            document.head.append(el)
        }

    }

    const csrftoken = document.querySelector('[name=csrfmiddlewaretoken]').value;
    
    
    var sbu = $("#sub-btn")
    /*click(function(e){
        console.log("BUTTON E: ",e)
        cart_.load('/cart/cart/', function(e){
            console("LOADED RESPONSE: ",e)
        })
    })*/


    function cart(id,action) {
        let a,r,d,c,rId,method,
        url, inputVal, product,
        formData, message, cart_total_amount,
        cart_total_items
        
        cart_total_items = $('[data-name="cart-total-items"]')
        cart_total_amount = $("[data-name='cart-total-amount']")

        /*
        formData = new FormData();
        formData.append("quantity",3)
        formData = $(formData).serialize()
        */

        formData = {"api":true}
        if (id) {
            inputVal = $("#".concat(id))
        }  else {
            return;
        }
        switch (action) {
            case 'add':
                method="POST"
                //"{#{% url 'cart:cart_add' product.id %}"#}
                url="/cart/add/".concat(id)+"/"

                formData['quantity']=inputVal.val()
                break;
            case'remove':
                method="POST"
                url = "cart/remove/".concat(id)+"/"
                //"{#{% url 'cart:cart_remove' product.id %}"#}
                formData['quantity']=inputVal.val()
                message = ""
                break;
            case 'update':
                method="POST"
                //"{#{% url 'cart:cart_add' product.id %}"#}
                url="/cart/update/".concat(id)+"/"

                formData['quantity']=inputVal.val()
                break;            
            case "detail":
                method="GET"
                //"{% url 'cart:cart_detail' %}"
                url="/cart/"
            case "check":
                method="GET"
                url = "/cart/check/".concat(id)+"/"
                // method is get. Just returns cart details
                break;
            default:
                method="GET"
                //"{% url 'cart:cart_detail' %}"
                url="/cart/"                
                break;
        }


        $.ajax({
            url: url,
            type:method,
            data: formData,
            headers:{'X-CSRFToken':csrftoken},
            success: function(data){
                /*if(data){//!data.error){

                }*/
                cart_total_amount[0].innerText=data.total_amount
                cart_total_amount[2].innerText=data.total_amount
                cart_total_items[0].innerText=data.total_items
                cart_total_items[2].innerText=data.total_items
                // USE bootstrap alert
                if (method == "GET") {
                    product=data.product
                    if(product.found) {
                        console.log("FOUND")

                    } else {
                        console.log("NOT FOUND")
                    }
                    if (data.product.quantity) {
                        //$(inputVal).val(data.product.quantity)

                        purpose = false
                        $("[id=" +""+id+""+"]").val(data.product.quantity)
                        
                    }    
                } else {
                    if (data.product.quantity) {
                        //$(inputVal).val(data.product.quantity)
                        //CHECK IF causes any issues as the input watches for change
                        // change where cart add is done to avoid.

                        purpose = false
                        var pr = $("[id=" +""+id+""+"]").val(data.product.quantity)
                        //console.log(data.product.quantity)
                        //console.log(pr.length)
                    }                     
                }

            },
            error: function(error) {
                console.log("Sorry an error occured. Please retry"+error)
            }
        })


    }


    var options = {
                    html: true,

                    customClass:"bg-light",
                    content: $('[data-name="popover-content"]')
        
                }
                var exampleEl = document.getElementById('example')
                var popover = new bootstrap.Popover(exampleEl, options)



    function tgl(e,d,f,r) {
        let btn,id,cartBtn,cartBtnDiv,inputVal
        type = $(e).attr("data-type");
        if (type =="minus") {
        }
        btn =e.currentTarget
        //console.log($(btn).attr('data-field'))
        //console.log($(btn.parentElement).attr('data-name'))
        //inp = document.querySelector('[name=[]]').value;        
        //let inputVal = btn.parentElement.previousElementSibling.children[1].children[0]
        //id = inputVal.id//.slice(1)
        /*
        cartBtn = $("[data-name=cart-btn-"+id+"]")
        cartBtnDiv = $("[data-name=cart-btn-div-"+id+"]") 
        */       
       id =$(btn)
       .parent()
       .siblings()
       .children()
       .children()[1].id
        //$(inputVal).val(+1)
        
        
        //$("[name='"+"quant["+id+"]']").val(+1)

        const op= cart(id=id,action="add")


        //$(itemQ).toggleClass("c");//correct
        //$(btn.parentElement).css("display","none"); //correct
        // BTN.parent
        //working
        var v = $("[data-name="+"cart-btn-div-"+id+"]")
        v.siblings().css("display", "none")
        v.toggleClass("c")
  
        return true
    }        
    

    $(".btn-cart").click(function(e) {
      t = tgl(e=e,d=null, f=null,r=null)
    })

    //function cr(btn_number, input_number,reset=false){
        var cou = 0
        let currentVal;
        $(document).on('click','.btn-number',function(e){

            //console.log("DOCUMENT BTN_NUMBER",e)
            //console.log(btn_number.off("click",e))
            e.preventDefault();
            fieldName = $(this).attr('data-field');
            type      = $(this).attr('data-type');
            var input = $("input[name='"+fieldName+"']");
            currentVal = parseInt(input.val());

            if (!isNaN(currentVal)) {
                if(type == 'minus') {
                    if(currentVal > input.attr('min')) {
                        input.val(currentVal - 1).change();
                    } 
                    if(parseInt(input.val()) == input.attr('min')) {
        

                        //let p = this.parentElement.nextSibling.nextSibling

                        //$(p).css("display", "block")


                    //$(this.parentElement).toggleClass('c')

                    }

                } else if(type == 'plus') {
                    
                    if(currentVal < input.attr('max')) {
                        input.val(currentVal + 1).change();
                    }
                    if(parseInt(input.val()) == input.attr('max')) {
                        $(this).attr('disabled', true);
                    }

                }
            } else {
                input.val(0);
            }/*
            if (reset){
                $(this).unbind(e)
            }*/
        });
        //$('.input-number')
        $(document).on('focusin',function(e){
        $(this).data('oldValue', $(this).val());
        /*
        if (reset){
            $(this).unbind(e)
        }*/
        });

        //$('.input-number')
        $(document).on('change',".input-number",function(e) {
            e.preventDefault();


            let name, cartBtn, cartBtnDiv,id
            minValue =  parseInt($(this).attr('min'));
            maxValue =  parseInt($(this).attr('max'));
            valueCurrent = parseInt($(this).val());
            name = $(this).attr('name');
            var m = $("[id=" +""+this.id+""+"]")
            m.val(valueCurrent)

        if(cou==0){

            e.stopPropagation()
            if(valueCurrent==minValue || valueCurrent ==0) {
                
                id = this.id
                if(!purpose){

                    var v = $("[data-name="+"cart-btn-div-"+id+"]")
                    v.siblings().css("display", "block")
                    v.toggleClass("c")
                    purpose=true

                }

                /*
                //$(p).css("display", "block")
                cartBtn = $("[data-name=cart-btn-"+id+"]")
                cartBtnDiv = $("[data-name=cart-btn-div-"+id+"]")
                cartBtnDiv.toggleClass('c')    
                cartBtn.css("display","block") 
                console.log(cartBtn) 
                //$(this.parentElement).toggleClass('c')
                //cartBtnDiv=(this.parentElement.parentElement)
                */
                cart(this.id/*.slice(1)*/, action="remove") //update

            } else {
                cart(this.id/*.slice(1)*/, action="add") //update
            } cou+=1

        } else {
            cou=0
            return;
        }

            //console.log("INPUTVAL IS THE SAME WITH MIN", valueCurrent==minValue)
            /*
            if(valueCurrent >= minValue) {
                $(".btn-number[data-type='minus'][data-field='"+name+"']").removeAttr('disabled')
            } else {
                alert('Sorry, the minimum value was reached');
                $(this).val($(this).data('oldValue'));
            }
            if(valueCurrent <= maxValue) {
                $(".btn-number[data-type='plus'][data-field='"+name+"']").removeAttr('disabled')
            } else {
                alert('Sorry, the maximum value was reached');
                $(this).val($(this).data('oldValue'));
            }*/
            /*
            if (reset){
                $(this).unbind(e)
            }*/
        });
        //$(".input-number")
        $(document).on('keydown', ".input-number",function (e) {
                // Allow: backspace, delete, tab, escape, enter and .
                if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                    // Allow: Ctrl+A
                    (e.keyCode == 65 && e.ctrlKey === true) || 
                    // Allow: home, end, left, right
                    (e.keyCode >= 35 && e.keyCode <= 39)) {
                        // let it happen, don't do anything
                        return;
                }
                // Ensure that it is a number and stop the keypress
                if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                    e.preventDefault();
                }
                /*
                if (reset){
                    $(this).unbind(e)
                }*/
        });    
    //}
     //end  
     $(document).on('keydown', "[data-validate='num']",function (e) {
            // Allow: backspace, delete, tab, escape, enter and .
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13, 190]) !== -1 ||
                // Allow: Ctrl+A
                (e.keyCode == 65 && e.ctrlKey === true) || 
                // Allow: home, end, left, right
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                    // let it happen, don't do anything
                    return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });            



        /*
        var toast;
        let toastOption = {
            animation: true,
            delay: 15000
        }
        var toastElList = [].slice.call(document.querySelectorAll('.toast'))
        var toastList = toastElList.map(function (toastEl) {
            toast = new bootstrap.Toast(toastEl, toastOption)
        })
        toast.show()*/



        var toastTrigger = document.getElementById('liveToastBtn')
        var toastLiveExample = document.getElementById('liveToast')
        if (toastTrigger) {
        toastTrigger.addEventListener('click', function () {
            var toast = new bootstrap.Toast(toastLiveExample)

            toast.show()
        })
        }

    renderer=function() {
        // check if all resources is loaded then stop animation
        setTimeout(function() {
            $(".activity").css('animation','none');//.animate('none');
            $("[data-name='load-wraper']")
            $("[data-name='load-activity'] ").toggleClass("activity")//.css("animation background-image", none)
            $("[data-name='wraper']").toggleClass("wraper")

            //$("[data-name='load-wraper']").attr("style", "")//removeClass('load-wrapper')
            //$("[data-name='load-activity'] ").attr("class", "")//removeClass('load-activity')
            $("[data-name='content']").css('visibility', 'visible')
        }, 7000);//if content is loaded stop animation
    }
    renderer();
});